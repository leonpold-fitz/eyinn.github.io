(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{376:function(e,a,t){"use strict";t.r(a);var n=t(25),s=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[e._v("#")]),e._v(" 简介")]),e._v(" "),t("p",[e._v("本文介绍 Centos8 使用 Docker 安装 Halo 博客，并使用 Nginx 扩展工具 ngx_pagespeed 进行页面加速。")]),e._v(" "),t("h2",{attrs:{id:"准备工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备工具"}},[e._v("#")]),e._v(" 准备工具")]),e._v(" "),t("p",[e._v("VPS [ 云服务器 ]\nCentos8\n"),t("a",{attrs:{href:"https://www.chiark.greenend.org.uk/~sgtatham/putty/",target:"_blank",rel:"noopener noreferrer"}},[e._v("PuTTY"),t("OutboundLink")],1),e._v(" [ SSH 连接工具 ]\nDocker [ halo, mysql ]"),t("a",{attrs:{href:"https://freessl.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ssl 证书"),t("OutboundLink")],1),e._v("\nNginx [ ngx_pagespeed ]")]),e._v(" "),t("h2",{attrs:{id:"centos-安装-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#centos-安装-docker"}},[e._v("#")]),e._v(" Centos 安装 Docker")]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://www.runoob.com/linux/linux-command-manual.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Linux 命令大全"),t("OutboundLink")],1)])]),e._v(" "),t("h6",{attrs:{id:"_1-更新系统软件包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-更新系统软件包"}},[e._v("#")]),e._v(" 1. 更新系统软件包")]),e._v(" "),t("blockquote",[t("p",[e._v("yum update：升级所有包，同时也升级软件和系统内核。\nyum upgrade：只升级所有包，不升级软件和系统内核。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo yum upgrade -y\n")])])]),t("h6",{attrs:{id:"_2-安装依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装依赖"}},[e._v("#")]),e._v(" 2. 安装依赖")]),e._v(" "),t("blockquote",[t("p",[e._v("后续安装 Docker & 编译 Nginx 必备。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo yum install -y yum-utils device-mapper-persistent-data lvm2 gcc-c++ pcre-devel zlib-devel libuuid-devel zip wget gcc-c++ ncurses ncurses-devel cmake make perl bison openssl openssl-devel gcc* libxml2 libxml2-devel curl-devel libjpeg* libpng* freetype*\n")])])]),t("h6",{attrs:{id:"_3-添加软件源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-添加软件源"}},[e._v("#")]),e._v(" 3. 添加软件源")]),e._v(" "),t("blockquote",[t("p",[e._v("阿里云软件源。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])])]),t("h6",{attrs:{id:"_4-更新-yum-缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-更新-yum-缓存"}},[e._v("#")]),e._v(" 4. 更新 yum 缓存")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo yum makecache fast\n")])])]),t("h6",{attrs:{id:"_5-更新-containerd-io-版本并安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-更新-containerd-io-版本并安装"}},[e._v("#")]),e._v(" 5. 更新 containerd.io 版本并安装")]),e._v(" "),t("blockquote",[t("p",[e._v("原 containerd.io 版本与 Docker 要求不符。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo wget https://download.docker.com/linux/centos/7/x86_64/edge/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm && yum install -y containerd.io-1.2.6-3.3.el7.x86_64.rpm\n")])])]),t("h6",{attrs:{id:"_6-安装-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-安装-docker"}},[e._v("#")]),e._v(" 6. 安装 Docker")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo yum install docker-ce docker-ce-cli containerd.io -y\n")])])]),t("h6",{attrs:{id:"_7-启动-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-启动-docker"}},[e._v("#")]),e._v(" 7. 启动 Docker")]),e._v(" "),t("blockquote",[t("p",[e._v("如需要 Docker 开机启动，执行该命令。 sudo systemctl enable docker")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo systemctl start docker\n")])])]),t("h6",{attrs:{id:"_8-docker-镜像加速"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-docker-镜像加速"}},[e._v("#")]),e._v(" 8. Docker 镜像加速")]),e._v(" "),t("blockquote",[t("p",[e._v("该命令创建 daemon.json 文件。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo vim /etc/docker/daemon.json\n")])])]),t("h6",{attrs:{id:"_9-设置配置参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-设置配置参数"}},[e._v("#")]),e._v(" 9. 设置配置参数")]),e._v(" "),t("blockquote",[t("p",[e._v("复制并右键粘贴至 daemon.json 使用 :wq 保存。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('{\n  "registry-mirrors": ["http://hub-mirror.c.163.com"]\n}\n')])])]),t("h6",{attrs:{id:"_10-重载配置-重启-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-重载配置-重启-docker"}},[e._v("#")]),e._v(" 10. 重载配置 & 重启 Docker")]),e._v(" "),t("blockquote"),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo systemctl daemon-reload && systemctl restart docker\n")])])]),t("h2",{attrs:{id:"docker-安装-mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-安装-mysql"}},[e._v("#")]),e._v(" Docker 安装 MySQL")]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://www.runoob.com/docker/docker-command-manual.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker 命令大全"),t("OutboundLink")],1)])]),e._v(" "),t("h6",{attrs:{id:"_1-拉取-mysql-镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-拉取-mysql-镜像"}},[e._v("#")]),e._v(" 1. 拉取 MySQL 镜像")]),e._v(" "),t("blockquote",[t("p",[e._v("默认最新版本，如需指定版本 sudo docker pull mysql:版本号")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo docker pull mysql\n")])])]),t("h6",{attrs:{id:"_2-运行-mysql-容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-运行-mysql-容器"}},[e._v("#")]),e._v(" 2. 运行 MySQL 容器")]),e._v(" "),t("blockquote",[t("p",[e._v("默认用户 root ，"),t("code",[e._v("{密码}")]),e._v(" 请自行设置。 [ 替换时包括花括号 ]")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run --restart=always -it -d --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD={密码} mysql\n")])])]),t("h6",{attrs:{id:"_3-进入-mysql-容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-进入-mysql-容器"}},[e._v("#")]),e._v(" 3. 进入 MySQL 容器")]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://www.runoob.com/mysql/mysql-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("MySQL 教程"),t("OutboundLink")],1)])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo docker exec -it mysql bash\n")])])]),t("h6",{attrs:{id:"_4-登录到-mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-登录到-mysql"}},[e._v("#")]),e._v(" 4. 登录到 MySQL")]),e._v(" "),t("blockquote",[t("p",[e._v("根据提示输入"),t("code",[e._v("密码")]),e._v("，按下 Enter 键登录。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("mysql -uroot -p\n")])])]),t("h6",{attrs:{id:"_5-创建数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-创建数据库"}},[e._v("#")]),e._v(" 5. 创建数据库")]),e._v(" "),t("blockquote",[t("p",[e._v("创建 halo 数据库（必须带分号，提示 "),t("code",[e._v("Query OK")]),e._v(" 则创建成功），后续用作 Halo 配置中。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("create database halo;\n")])])]),t("h6",{attrs:{id:"_6-退出容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-退出容器"}},[e._v("#")]),e._v(" 6. 退出容器")]),e._v(" "),t("blockquote",[t("p",[e._v("务必执行两次 "),t("code",[e._v("exit")]),e._v("，第一次退出 MySQL，第二次退出 MySQL 容器。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("exit\n")])])]),t("h2",{attrs:{id:"docker-安装-halo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-安装-halo"}},[e._v("#")]),e._v(" Docker 安装 Halo")]),e._v(" "),t("h6",{attrs:{id:"_1-下载-halo-配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-下载-halo-配置文件"}},[e._v("#")]),e._v(" 1. 下载 Halo 配置文件")]),e._v(" "),t("blockquote",[t("p",[e._v("由于进入容器修改配置需要 vim，而容器中没有安装 vim 安装又太慢，我们选择挂载自定义配置。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("curl -o ~/halo/application.yaml --create-dirs https://dl.halo.run/config/application-template.yaml\n")])])]),t("h6",{attrs:{id:"_2-修改配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改配置文件"}},[e._v("#")]),e._v(" 2. 修改配置文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("vim ~/halo/application.yaml\n")])])]),t("h6",{attrs:{id:"_3-替换数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-替换数据库"}},[e._v("#")]),e._v(" 3. 替换数据库")]),e._v(" "),t("blockquote",[t("p",[e._v("我们选择使用刚刚创建 MySQL 数据库并指定库名 halo。\n设置 "),t("code",[e._v("{ip}")]),e._v(" 请勿使用 127.0.0.1（Halo 与 MySQL 不在同一容器内）。\n设置 "),t("code",[e._v("{密码}")]),e._v(" 填入 root 用户的密码。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server:\n  port: 8090\nspring:\n  datasource:\n\n    # MySQL Database\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://{ip}:3306/halo?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n    username: root\n    password: {密码}\n")])])]),t("h6",{attrs:{id:"_4-拉取-halo-镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-拉取-halo-镜像"}},[e._v("#")]),e._v(" 4. 拉取 Halo 镜像")]),e._v(" "),t("blockquote",[t("p",[e._v("默认为最新镜像。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo docker pull ruibaby/halo\n")])])]),t("h6",{attrs:{id:"_5-启动-halo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-启动-halo"}},[e._v("#")]),e._v(" 5. 启动 Halo")]),e._v(" "),t("blockquote",[t("p",[e._v("创建容器并运行，指定映射自定义配置文件路径。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run --restart=always -it -d --name halo -p 8090:8090  -v ~/halo/:/root/.halo ruibaby/halo\n")])])]),t("h6",{attrs:{id:"_6-关于-halo-其他事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-关于-halo-其他事项"}},[e._v("#")]),e._v(" 6. 关于 Halo 其他事项")]),e._v(" "),t("blockquote",[t("p",[e._v("现在已经可以访问 Halo 博客了，输入 VPS 公网 ip：8090 即可进行 Halo 博客向导。\n但是由于手机端访问速度属实感人，我不得不再折腾一番使用 ngx_pagespeed 进行页面加速。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 如需更新 Halo 版本(配置和博客内容数据已经存入 MySQL 数据库中)\n\n# 删除容器\nsudo docker rm -f halo && sudo docker rmi ruibaby/halo\n\n# 拉取最新的 Halo 镜像\nsudo docker pull ruibaby/halo\n\n# 创建容器\ndocker run --restart=always -it -d --name halo -p 8090:8090  -v ~/halo/:/root/.halo ruibaby/halo\n")])])]),t("h2",{attrs:{id:"申请免费-ssl-证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#申请免费-ssl-证书"}},[e._v("#")]),e._v(" 申请免费 SSL 证书")]),e._v(" "),t("h6",{attrs:{id:"_1-申请-ssl-证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-申请-ssl-证书"}},[e._v("#")]),e._v(" 1. "),t("a",{attrs:{href:"https://freessl.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("申请 SSL 证书"),t("OutboundLink")],1)]),e._v(" "),t("blockquote",[t("p",[e._v("选择 "),t("code",[e._v("多域名通配符")]),e._v(" 输入你的域名，点击创建证书。")])]),e._v(" "),t("p",[t("img",{attrs:{src:"http://81.68.188.211:802/upload/2020/09/freessl1-ba6c7412be4b4260bda0bd2fb6955185.png",alt:"freessl1.png"}})]),e._v(" "),t("blockquote",[t("p",[e._v("输入 "),t("code",[e._v("邮箱")]),e._v("，选择 "),t("code",[e._v("一键申请")]),e._v(" 根据提示下载 "),t("code",[e._v("KeyManager")]),e._v(" 等待证书生成。")])]),e._v(" "),t("p",[t("img",{attrs:{src:"http://81.68.188.211:802/upload/2020/09/freessl2-171355e019b14d1597abd2c652437577.png",alt:"freessl2.png"}})]),e._v(" "),t("h6",{attrs:{id:"_2-部署证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-部署证书"}},[e._v("#")]),e._v(" 2. 部署证书")]),e._v(" "),t("blockquote",[t("p",[e._v("在 "),t("code",[e._v("证书管理")]),e._v(" 界面，点击 "),t("code",[e._v("一键部署")]),e._v("。")])]),e._v(" "),t("p",[t("img",{attrs:{src:"http://81.68.188.211:802/upload/2020/09/freessl3-3888ab67959a43b2a48c90b7c31efaac.png",alt:"freessl3.png"}})]),e._v(" "),t("blockquote",[t("p",[e._v("选择 "),t("code",[e._v("部署到Nginx/Apache")]),e._v("，点击 "),t("code",[e._v("添加部署信息")]),e._v("。")])]),e._v(" "),t("p",[t("img",{attrs:{src:"http://81.68.188.211:802/upload/2020/09/freessl4-d13e72c05e3244c9863ecb6abec41906.png",alt:"freessl4.png"}})]),e._v(" "),t("blockquote",[t("p",[e._v("输入连接信息后保存，并点击 "),t("code",[e._v("一键部署")]),e._v("。\n"),t("code",[e._v("##")]),e._v(" 此时会提示 "),t("code",[e._v("nginx命令")]),e._v(" 错误信息，不必惊慌 证书文件已经上传到服务器了。\n（报错原因：未安装 "),t("code",[e._v("nginx")]),e._v("，未配置 "),t("code",[e._v("nginx全局命令")]),e._v("） "),t("code",[e._v("##")])])]),e._v(" "),t("p",[t("img",{attrs:{src:"http://81.68.188.211:802/upload/2020/09/freessl5-ccbed578ef3540369f6e28c912ac5165.png",alt:"freessl5.png"}})]),e._v(" "),t("h2",{attrs:{id:"centos-安装-nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#centos-安装-nginx"}},[e._v("#")]),e._v(" Centos 安装 Nginx")]),e._v(" "),t("h6",{attrs:{id:"_1-下载-nginx-1-19-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-下载-nginx-1-19-10"}},[e._v("#")]),e._v(" 1. 下载 nginx 1.19.10")]),e._v(" "),t("blockquote",[t("p",[e._v("将 nginx 压缩包解压到 /root/nginx 目录。\n"),t("code",[e._v("##")]),e._v(" 当前 nginx 文件夹为源码文件，编译后运行目录在 /usr/loacl/nginx/ 请不要记混"),t("code",[e._v("##")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("wget http://nginx.org/download/nginx-1.9.10.tar.gz && tar zxvf nginx-1.9.10.tar.gz -C /root/ && mv /root/nginx-1.9.10 /root/nginx\n")])])]),t("h6",{attrs:{id:"_2-下载-ngx-pagespeed。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-下载-ngx-pagespeed。"}},[e._v("#")]),e._v(" 2. 下载 ngx_pagespeed。")]),e._v(" "),t("blockquote",[t("p",[e._v("将 ngx_pagespeed 压缩包解压到 /root/ngx-pagespeed 目录。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("wget https://github.com/pagespeed/ngx_pagespeed/archive/v1.13.35.2-stable.tar.gz &&  tar zxf v1.13.35.2-stable.tar.gz -C /root/ && mv /root/v1.13.35.2-stable /root/ngx-pagespeed\n")])])]),t("h6",{attrs:{id:"_3-下载-ngx-pagespeed-依赖包-posl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-下载-ngx-pagespeed-依赖包-posl"}},[e._v("#")]),e._v(" 3. 下载 ngx_pagespeed 依赖包 posl")]),e._v(" "),t("blockquote",[t("p",[e._v("将 posl 压缩包解压到 /root/ngx-pagespeed/ 目录。\n"),t("code",[e._v("##")]),e._v(" posl 必须放在 ngx-pagespeed 目录下 "),t("code",[e._v("##")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cd /root/ngx-pagespeed/ && wget https://dl.google.com/dl/page-speed/psol/1.13.35.2-x64.tar.gz && tar zxf 1.13.35.2-x64.tar.gz\n")])])]),t("h6",{attrs:{id:"_4-编译-nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-编译-nginx"}},[e._v("#")]),e._v(" 4. 编译 nginx")]),e._v(" "),t("blockquote",[t("p",[e._v("将 ngx-pagespeed 编译到 nginx。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cd /root/nginx/ && ./configure --add-module=/root/ngx-pagespeed --user=nobody --group=nobody --with-http_stub_status_module --with-http_v2_module --with-http_ssl_module --with-http_gzip_static_module\n")])])]),t("h6",{attrs:{id:"_5-安装-nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-安装-nginx"}},[e._v("#")]),e._v(" 5. 安装 nginx")]),e._v(" "),t("blockquote",[t("p",[e._v("nginx 默认安装路径为 /usr/local/nginx。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("make && make install\n")])])]),t("h6",{attrs:{id:"_6-配置-nginx-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-配置-nginx-service"}},[e._v("#")]),e._v(" 6. 配置 nginx.service")]),e._v(" "),t("blockquote",[t("p",[e._v("将 nginx 启动文件配置到系统项。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("vi /lib/systemd/system/nginx.service\n")])])]),t("blockquote",[t("p",[e._v("复制下方配置，右键粘贴到 nginx.service 中，并 "),t("code",[e._v(":wq")]),e._v(" 保存。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[Unit]\nDescription=nginx\nAfter=network.target\n\n[Service]\nType=forking\nExecStart=/usr/local/nginx/sbin/nginx\nExecReload=/usr/local/nginx/sbin/nginx -s reload\nExecStop=/usr/local/nginx/sbin/nginx -s quit\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n")])])]),t("h6",{attrs:{id:"_7-配置-pagespeed-conf-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-配置-pagespeed-conf-文件"}},[e._v("#")]),e._v(" 7. 配置 pagespeed.conf 文件")]),e._v(" "),t("blockquote",[t("p",[e._v("由于引用 ngx_pagespeed 需要在 nginx server 块中配置，我们拿出相同配置放入 pagespeed.conf 中方便引用。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("vim /usr/local/nginx/conf/pagespeed.conf\n")])])]),t("blockquote",[t("p",[e._v("复制下方配置，右键粘贴到 pagespeed.conf 中，并 "),t("code",[e._v(":wq")]),e._v(" 保存。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# on 启用，off 关闭\npagespeed on;\n\n# 重置 http Vary 头\npagespeed RespectVary on;\n\n# html字符转小写\npagespeed LowercaseHtmlNames on;\n\n# 压缩带 Cache-Control: no-transform 标记的资源\npagespeed DisableRewriteOnNoTransform off;\n\n# 相对URL\npagespeed PreserveUrlRelativity on;\n\n# 开启 https\npagespeed FetchHttps enable;\n\n# 配置服务器缓存位置和自动清除触发条件，缓存文件夹如果不存在则需要自行创建，建议放在内存中\npagespeed FileCachePath "/dev/shm/ngx_pagespeed/";\npagespeed FileCacheSizeKb 2048000;\npagespeed FileCacheCleanIntervalMs 43200000;\npagespeed FileCacheInodeLimit 500000;\n\n# 过滤规则\npagespeed RewriteLevel PassThrough;\n\n# 过滤WordPress的/wp-admin/目录(可选配置，可参考使用)\npagespeed Disallow "*/wp-admin/*";\npagespeed Disallow "*/wp-login.php*";\n\n# 移除不必要的url前缀，开启可能会导致某些自动加载功能失效\n#pagespeed EnableFilters trim_urls;\n\n# 移除 html 空白\npagespeed EnableFilters collapse_whitespace;\n\n# 移除 html 注释\npagespeed EnableFilters remove_comments;\n\n# DNS 预加载\npagespeed EnableFilters insert_dns_prefetch;\n\n# 压缩CSS\npagespeed EnableFilters rewrite_css;\n\n# 合并CSS\npagespeed EnableFilters combine_css;\n\n# 重写CSS，优化加载渲染页面的CSS规则\npagespeed EnableFilters prioritize_critical_css;\n\n# 压缩js\npagespeed EnableFilters rewrite_javascript;\n\n# 合并js\npagespeed EnableFilters combine_javascript;\n\n# 优化内嵌样式属性\npagespeed EnableFilters rewrite_style_attributes;\n\n# 压缩图片\npagespeed EnableFilters rewrite_images;\n\n# 不加载显示区域以外的图片\npagespeed LazyloadImagesAfterOnload off;\n\n# 图片预加载\npagespeed EnableFilters inline_preview_images;\n\n# 移动端图片自适应重置\npagespeed EnableFilters resize_mobile_images;\n\n# 图片延迟加载\npagespeed EnableFilters lazyload_images;\n\n# 扩展缓存 改善页面资源的可缓存性\npagespeed EnableFilters extend_cache;\n')])])]),t("h6",{attrs:{id:"_8-配置-nginx-conf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-配置-nginx-conf"}},[e._v("#")]),e._v(" 8. 配置 nginx.conf")]),e._v(" "),t("blockquote",[t("p",[e._v("考虑到配置繁琐，我去除了注释信息以便后续修改。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("vim /usr/local/nginx/conf/nginx.conf\n")])])]),t("blockquote",[t("p",[e._v("复制下方配置，右键粘贴到 nginx.conf 中，注意替换注释处配置信息后再 "),t("code",[e._v(":wq")]),e._v(" 保存。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# 可根据自己的服务器核心数配置\nworker_processes  1;\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n\n    gzip on;\n\n    gzip_min_length 1k;\n\n    gzip_buffers 4 16k;\n\n    gzip_comp_level 2;\n\n    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/javascript application/x-httpd-php image/jpeg image/gif image/png;\n\n    gzip_vary off;\n\n    gzip_disable "MSIE [1-6]\\.";\n\n    include       mime.types;\n\n    default_type  application/octet-stream;\n\n    sendfile\ton;\n\n    tcp_nopush\ton;\n\n    keepalive_timeout\t65;\n\n    server {\n        listen       80;\n        server_name  localhost;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n\n    # halo\n    server {\n        listen  80;\n        listen  443 ssl;\n\n\t# 需要监听的域名 根据自己的域名进行配置(不需要带 http:// 或 https://)\n        server_name 域名地址;\n\n\t# nginx 1.15 版本之后忽略 ssl 自动开启，小于1.15版本解开注释，大于1.15版本解开注释会报错（根据本文安装的 nginx 版本为 1.19.10 不需要接口注释）\n\t#ssl on;\n\n\t# 请根据自己的 ssl cert 地址配置\n        ssl_certificate /etc/ssl/cert.pem;\n\n\t# 请根据自己的 ssl key 地址配置\n        ssl_certificate_key /etc/ssl/key.pem;\n\n        ssl_session_timeout 5m;\n\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n\n        ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n\n        ssl_prefer_server_ciphers on;\n\n        # 引用 pagespeed.conf 配置\n        include pagespeed.conf;\n\n        location / {\n            proxy_pass http://127.0.0.1:8090;\n        }\n    }\n\n}\n')])])]),t("h6",{attrs:{id:"_9-启动-nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-启动-nginx"}},[e._v("#")]),e._v(" 9. 启动 nginx")]),e._v(" "),t("blockquote",[t("p",[e._v("已经配置过 nginx.service 可直接执行 systemctl 命令。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo systemctl start nginx.service\n")])])]),t("blockquote",[t("p",[e._v("其他命令。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 启动\nsystemctl start nginx.service\n\n# 重启\nsystemctl restart nginx.service\n\n# 关闭\nsystemctl stop nginx.service\n\n# 设置开机启动\nsystemctl enable nginx.service\n\n# 关闭开机启动\nsystemctl disable nginx.service\n\n# 查看运行状态\nsystemctl status nginx.service\n\n# 查看所有已启动的服务\nsystemctl list-units --type=service\n")])])]),t("h6",{attrs:{id:"_10-配置-nginx-全局命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-配置-nginx-全局命令"}},[e._v("#")]),e._v(" 10. 配置 nginx 全局命令")]),e._v(" "),t("blockquote",[t("p",[e._v("由于 ngx_pagespeed 的原因 nginx 只能手动编译安装，所以区别于自动安装版，需要手动配置全局命令。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("vim /etc/init.d/nginx\n")])])]),t("blockquote",[t("p",[e._v("复制下方配置，右键粘贴到 nginx 中，"),t("code",[e._v(":wq")]),e._v(" 保存。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('#!/bin/sh\n# nginx - this script starts and stops the nginx daemin\n#\n# chkconfig:   - 85 15\n\n# description:  Nginx is an HTTP(S) server, HTTP(S) reverse \\\n#               proxy and IMAP/POP3 proxy server\n\n# processname: nginx\n# config:      /usr/local/nginx/conf/nginx.conf\n# pidfile:     /usr/local/nginx/logs/nginx.pid\n\n# Source function library.\n\n. /etc/rc.d/init.d/functions\n\n# Source networking configuration.\n\n. /etc/sysconfig/network\n\n# Check that networking is up.\n\n[ "$NETWORKING" = "no" ] && exit 0\n\nnginx="/usr/local/nginx/sbin/nginx"\n\nprog=$(basename $nginx)\n\nNGINX_CONF_FILE="/usr/local/nginx/conf/nginx.conf"\n\nlockfile=/var/lock/subsys/nginx\n\nstart() {\n\n    [ -x $nginx ] || exit 5\n\n    [ -f $NGINX_CONF_FILE ] || exit 6\n\n    echo -n $"Starting $prog: "\n\n    daemon $nginx -c $NGINX_CONF_FILE\n\n    retval=$?\n\n    echo\n\n    [ $retval -eq 0 ] && touch $lockfile\n\n    return $retval\n\n}\n\nstop() {\n\n    echo -n $"Stopping $prog: "\n\n    killproc $prog -QUIT\n\n    retval=$?\n\n    echo\n\n    [ $retval -eq 0 ] && rm -f $lockfile\n\n    return $retval\n\n}\n\nrestart() {\n\n    configtest || return $?\n\n    stop\n\n    start\n\n}\n\nreload() {\n\n    configtest || return $?\n\n    echo -n $"Reloading $prog: "\n\n    killproc $nginx -HUP\n\n    RETVAL=$?\n\n    echo\n\n}\n\nforce_reload() {\n\n    restart\n\n}\n\nconfigtest() {\n\n  $nginx -t -c $NGINX_CONF_FILE\n\n}\n\n\nrh_status() {\n\n    status $prog\n\n}\n\nrh_status_q() {\n\n    rh_status >/dev/null 2>&1\n\n}\n\ncase "$1" in\n\n    start)\n\n        rh_status_q && exit 0\n        $1\n        ;;\n\n    stop)\n\n        rh_status_q || exit 0\n        $1\n        ;;\n\n    restart|configtest)\n        $1\n        ;;\n\n    reload)\n        rh_status_q || exit 7\n        $1\n        ;;\n\n    force-reload)\n        force_reload\n        ;;\n    status)\n        rh_status\n        ;;\n\n    condrestart|try-restart)\n\n        rh_status_q || exit 0\n            ;;\n    *)\n\n        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}"\n        exit 2\n\nesac\n')])])]),t("blockquote",[t("p",[e._v("新建 nginx 文件。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cd /etc/init.d && chmod 755 /etc/init.d/nginx && chkconfig --add nginx\n")])])]),t("blockquote",[t("p",[e._v("修改 profile 配置文件。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("vim /etc/profile\n")])])]),t("blockquote",[t("p",[e._v("复制下方配置，按 "),t("code",[e._v("i")]),e._v(" 键 插入，右键粘贴到 profile 中最下方，按 "),t("code",[e._v("esc")]),e._v(" 键后输入 "),t("code",[e._v(":wq")]),e._v(" 保存。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("PATH=$PATH:/usr/local/nginx/sbin\nexport PATHi\n")])])]),t("blockquote",[t("p",[e._v("重载 profile 配置。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("source /etc/profile\n")])])]),t("blockquote",[t("p",[e._v("nginx 命令使用。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("nginx -h 查看帮助选项\nnginx -v 查看版本和配置选项\nnginx -t 测试 nginx.conf 语法错误\nnginx -c filename 指定配置文件(安装版 默认 /etc/nginx/nginx.conf, 手动安装版 默认 /usr/local/nginx/conf/nginx.conf)\nnginx -s signal 发送信号到 master 进程\n\n# 启动\nnginx\n\n# 优雅停止 （完成所有连接请求）\nnginx -s quit\n\n# 停止 （强制退出）\nnginx -s stop\n\n# 重启\nnginx -s reopen\n\n# 重载配置文件\nnginx -s reload\n")])])]),t("h2",{attrs:{id:"完结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完结"}},[e._v("#")]),e._v(" 完结")]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://developers.google.cn/speed/pagespeed/insights",target:"_blank",rel:"noopener noreferrer"}},[e._v("还不测试一下性能，开始下一波的折腾？"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=s.exports}}]);